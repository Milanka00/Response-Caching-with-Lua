static_resources:
  listeners:
    - name: listener_0
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8080
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                codec_type: AUTO
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: backend
                      domains: ["*"]
                      routes:
                        - match: { prefix: "/" }
                          route:
                            cluster: backend_cluster
                            timeout: 0s
                http_filters:
                  - name: envoy.filters.http.lua
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
                      inline_code: |
                        
                          -- Lua filter configuration
                          -- Called on the response path.
                          function envoy_on_response(response_handle)
                              print("inside the response path")
                              local response_body = response_handle:body()
                              print("extracted the body")
                              
                              print("imported redis connection")
                              local redis = require("resty.redis")
                              local red = redis:new()
                              print("new redis connection instance")

                              red:set_timeout(1000)  -- 1 second timeout

                              -- Connecting to Redis
                              local ok, err = red:connect("redis", 6379)
                              if not ok then
                                  print("failed to connect to redis: ", err)
                                  return
                              else
                                  print("connected to redis successfully")
                              end

                              -- Saving the response to Redis
                              local res, err = red:set("response_key", response_body)
                              if not res then
                                  print("failed to save the response in redis: ", err)
                              else
                                  print("response saved in redis successfully")
                              end

                              -- Closing the Redis connection
                              local ok, err = red:close()
                              if not ok then
                                  print("failed to close redis connection: ", err)
                              else
                                  print("redis connection closed successfully")
                              end
                          end


            
                      
                  - name: envoy.filters.http.router
  clusters:
    - name: backend_cluster
      connect_timeout: 0.25s
      type: STRICT_DNS
      lb_policy: round_robin
      load_assignment:
        cluster_name: backend_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: new_go_backend
                      port_value: 8000
